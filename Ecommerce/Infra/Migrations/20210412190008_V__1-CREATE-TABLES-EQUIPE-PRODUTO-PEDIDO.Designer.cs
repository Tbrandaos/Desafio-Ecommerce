// <auto-generated />
using System;
using Ecommerce.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Ecommerce.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210412190008_V__1-CREATE-TABLES-EQUIPE-PRODUTO-PEDIDO")]
    partial class V__1CREATETABLESEQUIPEPRODUTOPEDIDO
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Ecommerce.Infra.Tables.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("integer");

                    b.Property<long>("NumeroIdentificacao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Pedido", b =>
                {
                    b.HasOne("Ecommerce.Infra.Tables.Equipe", "Equipe")
                        .WithMany("Pedidos")
                        .HasForeignKey("EquipeId");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Produto", b =>
                {
                    b.HasOne("Ecommerce.Infra.Tables.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Equipe", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.Infra.Tables.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
